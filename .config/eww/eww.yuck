(defwidget bar [monitor]
	(centerbox :orientation "h"
		       :halign "fill"
		       :hexpand true
		(workspace :monitor monitor)
		(time)
		(rightstuff :primary {monitor == 0 ? true : false})
	)
)

(deflisten workspaces0 :initial "[]"
	`/home/alex/.config/eww/target/release/workspaces icons 0`)

(deflisten workspaces1 :initial "[]"
	`/home/alex/.config/eww/target/release/workspaces icons 1`)

(defpoll time :interval "1s"
	`date +"%-I:%M %p — %b %d, %Y" | tr '[AM|PM]' '[am|pm]'`)

(defpoll weather_now :interval "5m" :initial "{\"main\": {\"temp\": 0}, \"weather\": [{\"icon\": \"02d\"}]}"
	`/home/alex/.config/eww/scripts/weather-current.sh`)

(defpoll weather_forecast :interval "5m"
	`/home/alex/.config/eww/scripts/weather-forecast.sh`)


(defwidget time []
	(box :class "pill"
		 (label :class "time-text" 
				:text time)
	)
)

(defwidget weather [primary]
	(box :class "pill" :visible {primary}
		 (label :class "weather-text" 
				:text {round(jq(weather_now, '.main.temp', "r"), 0) + "°C"})
		 (image :class "weather-icon" 
				:path {replace("/home/alex/.config/eww/icons/AA@2x.png", "AA", jq(weather_now, '.weather[0].icon', "r"))}
			    :image-width 32
				:image-height 32
			)
	)
)

(defwidget rightstuff [primary]
	(box :class "rightstuff"
		 :halign "end"
		 :spacing 0
		 :space-evenly false
		(weather :primary {primary})
		(box :class "pill" :visible {primary}
			(label :text {round(EWW_RAM.used_mem_perc, 0) + "%  "})
			(label :text {round(EWW_RAM.used_mem_perc, 0) + "%"})
		)
		(box :class "pill"
			(image :path "/home/alex/.config/eww/icons/bell.png"
				   :image-width 24
				   :image-height 24
			)
		)
		(box :class "pill"
			 :style 'margin-right: 5px;'
			(image :path "/home/alex/.config/eww/icons/settings-5666.png"
				   :image-width 24
				   :image-height 24
			)
		)
	)
)

(defwidget workspace [monitor]
	(box :class "pill"
		 :halign "start"
		 :orientation "horizontal"
		 :spacing 0
		 :space-evenly false
		 :style 'margin-left: 5px;'
		(for ws in {monitor == 1 ?  workspaces1 : workspaces0} 
			(box :class "workspace"
				 :orientation "vertical"
				 :vexpand false 
				 :halign "start"
				 :spacing 0
				 :space-evenly false
				 
			   (box  
					 :spacing 0
					 :space-evenly false
					 :style {ws["active"] ? 'border-bottom: 1px solid rgba(#000000, .3);' : ''}
					(label :class "number"
						   :justify "center" 
						   :lines 2 
						   :limit-width 2 
						   :text {ws["workspace"]})
					(for icon in {ws["icons"]} 
						(image :class "icon"
							   :path {icon["path"]}
							   :image-width 24
							   :image-height 24)
					)
				)
			)

		)
	)
)

(defwindow bar0
           :monitor 0
		   :windowtype "dock"
		   :geometry (geometry :x "0%"
							   :y "10px"
							   :width "100%"
							   :height "5px"
							   :anchor "top center")
	       ;; :reserve (struts :side "top" :distance "4%")
           :stacking "fg"
           :exclusive true
           :focusable "none"
	(bar :class "bar" :monitor 0))


(defwindow bar1
           :monitor 1
		   :windowtype "dock"
		   :geometry (geometry :x "0%"
							   :y "10px"
							   :width "100%"
							   :height "5px"
							   :anchor "top center")
	       ;; :reserve (struts :side "top" :distance "%")
           :stacking "fg"
           :exclusive true
           :focusable "none"
	(bar :class "bar" :monitor 1))
